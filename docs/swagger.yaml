basePath: /api
definitions:
  booking.Booking:
    properties:
      booking_id:
        type: integer
      created_at:
        type: string
      hotel_id:
        type: integer
      jumlah_hari:
        type: integer
      kamar_id:
        type: integer
      status_booking:
        $ref: '#/definitions/statusbooking.StatusBooking'
      status_booking_id:
        type: integer
      tanggal_check_in:
        type: string
      tanggal_check_out:
        type: string
      total_biaya:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - hotel_id
    - kamar_id
    - status_booking_id
    - total_biaya
    - user_id
    type: object
  booking.RequestCreateBookingSwagger:
    properties:
      kamar_id:
        type: integer
      user_id:
        type: integer
    required:
    - kamar_id
    type: object
  booking.RequestUpdateBooking:
    properties:
      booking_id:
        type: integer
      kamar_id:
        type: integer
      status_booking_id:
        type: integer
    required:
    - booking_id
    - kamar_id
    - status_booking_id
    type: object
  fasilitas.Fasilitas:
    properties:
      created_at:
        type: string
      deskripsi:
        minLength: 10
        type: string
      fasilitas_id:
        type: integer
      jenis_fasilitas:
        type: string
      updated_at:
        type: string
    required:
    - deskripsi
    - jenis_fasilitas
    type: object
  fasilitas.RequestFasilitas:
    properties:
      deskripsi:
        minLength: 10
        type: string
      jenis_fasilitas:
        type: string
    required:
    - deskripsi
    - jenis_fasilitas
    type: object
  fasilitashotel.RequestFasilitasHotel:
    properties:
      fasilitas_id:
        type: integer
      hotel_id:
        type: integer
    required:
    - fasilitas_id
    - hotel_id
    type: object
  fasilitashotel.ResponseFasilitasHotel:
    properties:
      fasilitas:
        $ref: '#/definitions/fasilitas.Fasilitas'
      fasilitas_hotel_id:
        type: integer
      fasilitas_id:
        type: integer
      hotel:
        $ref: '#/definitions/hotel.Hotel'
      hotel_id:
        type: integer
    required:
    - fasilitas_id
    - hotel_id
    type: object
  hakakses.HakAkses:
    properties:
      created_at:
        type: string
      hak_akses:
        maxLength: 50
        minLength: 3
        type: string
      hak_akses_id:
        type: integer
      updated_at:
        type: string
    required:
    - hak_akses
    type: object
  hakakses.RequestHakAkses:
    properties:
      hak_akses:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - hak_akses
    type: object
  hotel.Hotel:
    properties:
      alamat_hotel:
        minLength: 10
        type: string
      created_at:
        type: string
      email_hotel:
        type: string
      hotel_id:
        type: integer
      nama_hotel:
        minLength: 3
        type: string
      telp_hotel:
        minLength: 10
        type: string
      updated_at:
        type: string
    required:
    - alamat_hotel
    - email_hotel
    - nama_hotel
    - telp_hotel
    type: object
  hotel.RequestHotel:
    properties:
      alamat_hotel:
        minLength: 10
        type: string
      email_hotel:
        type: string
      nama_hotel:
        minLength: 3
        type: string
      telp_hotel:
        minLength: 10
        type: string
    required:
    - alamat_hotel
    - email_hotel
    - nama_hotel
    - telp_hotel
    type: object
  kamar.Kamar:
    properties:
      created_at:
        type: string
      harga:
        type: integer
      hotel_id:
        type: integer
      kamar_id:
        type: integer
      nomor_kamar:
        type: string
      status_kamar:
        $ref: '#/definitions/statuskamar.StatusKamar'
      status_kamar_id:
        type: integer
      tipe_kamar_id:
        type: integer
      updated_at:
        type: string
    required:
    - harga
    - nomor_kamar
    - tipe_kamar_id
    type: object
  kamar.RequestKamar:
    properties:
      harga:
        type: integer
      hotel_id:
        type: integer
      nomor_kamar:
        type: string
      status_kamar_id:
        type: integer
      tipe_kamar_id:
        type: integer
    required:
    - harga
    - hotel_id
    - nomor_kamar
    - tipe_kamar_id
    type: object
  pembayaran.RequestPembayaran:
    properties:
      booking_id:
        type: integer
      total_pembayaran:
        type: integer
    required:
    - booking_id
    - total_pembayaran
    type: object
  pembayaran.ResponsePembayaran:
    properties:
      booking:
        $ref: '#/definitions/booking.Booking'
      booking_id:
        type: integer
      pembayaran_id:
        type: integer
      tanggal_pembayaran:
        type: string
      total_pembayaran:
        type: integer
    required:
    - booking_id
    - total_pembayaran
    type: object
  statusbooking.RequestStatusBooking:
    properties:
      status_booking_nama:
        type: string
    required:
    - status_booking_nama
    type: object
  statusbooking.StatusBooking:
    properties:
      created_at:
        type: string
      status_booking_id:
        type: integer
      status_booking_nama:
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - status_booking_nama
    type: object
  statuskamar.RequestStatusKamar:
    properties:
      status_kamar_nama:
        type: string
    required:
    - status_kamar_nama
    type: object
  statuskamar.StatusKamar:
    properties:
      created_at:
        type: string
      status_kamar_id:
        type: integer
      status_kamar_nama:
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - status_kamar_nama
    type: object
  tipekamar.RequestTipeKamar:
    properties:
      tipe_kamar_nama:
        type: string
    required:
    - tipe_kamar_nama
    type: object
  tipekamar.TipeKamar:
    properties:
      created_at:
        type: string
      tipe_kamar_id:
        type: integer
      tipe_kamar_nama:
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - tipe_kamar_nama
    type: object
  user.RequestCreateAdminHotel:
    properties:
      email:
        type: string
      hotel_id:
        type: integer
      nama:
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - hotel_id
    - nama
    - password
    type: object
  user.RequestCreateUser:
    properties:
      email:
        type: string
      nama:
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - nama
    - password
    type: object
  user.RequestLogin:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
  description: |-
    API untuk reservasi hotel
    To access the API, you need to register and login first
  title: Reservasi Hotel API
  version: "1.0"
paths:
  /1.0/booking:
    get:
      consumes:
      - application/json
      description: Get All Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.Booking'
      summary: Get All Booking
      tags:
      - Booking
    post:
      consumes:
      - application/json
      description: Create Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Booking
        in: body
        name: CreateBooking
        required: true
        schema:
          $ref: '#/definitions/booking.RequestCreateBookingSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Booking
          schema:
            type: string
      summary: Create Booking
      tags:
      - Booking
  /1.0/booking/{id}:
    get:
      consumes:
      - application/json
      description: Get Booking By Id
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.Booking'
      summary: Get Booking By Id
      tags:
      - Booking
  /1.0/booking/admin:
    get:
      consumes:
      - application/json
      description: Get All Booking on Hotel harus admin hotel
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.Booking'
      summary: Get All Booking on Hotel
      tags:
      - Booking
  /1.0/booking/proses-reservasi:
    patch:
      consumes:
      - application/json
      description: Update Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Booking
        in: body
        name: UpdateBooking
        required: true
        schema:
          $ref: '#/definitions/booking.RequestUpdateBooking'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Booking
          schema:
            type: string
      summary: Update Booking
      tags:
      - Booking
  /1.0/fasilitas:
    get:
      consumes:
      - application/json
      description: Get All Fasilitas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitas.Fasilitas'
      summary: Get All Fasilitas
      tags:
      - Fasilitas
    post:
      consumes:
      - application/json
      description: Create Fasilitas
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Fasilitas
        in: body
        name: CreateFasilitas
        required: true
        schema:
          $ref: '#/definitions/fasilitas.RequestFasilitas'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Fasilitas
          schema:
            type: string
      summary: Create Fasilitas
      tags:
      - Fasilitas
  /1.0/fasilitas-hotel:
    get:
      consumes:
      - application/json
      description: Get All Fasilitas Hotel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitashotel.ResponseFasilitasHotel'
      summary: Get All Fasilitas Hotel
      tags:
      - Fasilitas Hotel
    post:
      consumes:
      - application/json
      description: Create Fasilitas Hotel
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Fasilitas Hotel
        in: body
        name: CreateFasilitasHotel
        required: true
        schema:
          $ref: '#/definitions/fasilitashotel.RequestFasilitasHotel'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Fasilitas Hotel
          schema:
            type: string
      summary: Create Fasilitas Hotel
      tags:
      - Fasilitas Hotel
  /1.0/fasilitas-hotel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Fasilitas Hotel
      parameters:
      - description: Fasilitas Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Fasilitas Hotel
          schema:
            type: string
      summary: Delete Fasilitas Hotel
      tags:
      - Fasilitas Hotel
    get:
      consumes:
      - application/json
      description: Get Fasilitas Hotel By Id
      parameters:
      - description: Fasilitas Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitashotel.ResponseFasilitasHotel'
      summary: Get Fasilitas Hotel By Id
      tags:
      - Fasilitas Hotel
    put:
      consumes:
      - application/json
      description: Update Fasilitas Hotel
      parameters:
      - description: Fasilitas Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Fasilitas Hotel
        in: body
        name: UpdateFasilitasHotel
        required: true
        schema:
          $ref: '#/definitions/fasilitashotel.RequestFasilitasHotel'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Fasilitas Hotel
          schema:
            type: string
      summary: Update Fasilitas Hotel
      tags:
      - Fasilitas Hotel
  /1.0/fasilitas-hotel/by-fasilitas/{id}:
    get:
      consumes:
      - application/json
      description: Get Fasilitas By Fasilitas Id
      parameters:
      - description: Fasilitas ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitashotel.ResponseFasilitasHotel'
      summary: Get Fasilitas By Fasilitas Id
      tags:
      - Fasilitas Hotel
  /1.0/fasilitas-hotel/by-hotel/{id}:
    get:
      consumes:
      - application/json
      description: Get Fasilitas By Hotel Id
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitashotel.ResponseFasilitasHotel'
      summary: Get Fasilitas By Hotel Id
      tags:
      - Fasilitas Hotel
  /1.0/fasilitas/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Fasilitas
      parameters:
      - description: Fasilitas ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Fasilitas
          schema:
            type: string
      summary: Delete Fasilitas
      tags:
      - Fasilitas
    get:
      consumes:
      - application/json
      description: Get Fasilitas By Id
      parameters:
      - description: Fasilitas ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fasilitas.Fasilitas'
      summary: Get Fasilitas By Id
      tags:
      - Fasilitas
    put:
      consumes:
      - application/json
      description: Update Fasilitas
      parameters:
      - description: Fasilitas ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Fasilitas
        in: body
        name: UpdateFasilitas
        required: true
        schema:
          $ref: '#/definitions/fasilitas.RequestFasilitas'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Fasilitas
          schema:
            type: string
      summary: Update Fasilitas
      tags:
      - Fasilitas
  /1.0/hak-akses:
    get:
      consumes:
      - application/json
      description: Get All Hak Akses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hakakses.HakAkses'
      summary: Get All Hak Akses
      tags:
      - Hak Akses
    post:
      consumes:
      - application/json
      description: Create Hak Akses
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Hak Akses
        in: body
        name: CreateHakAkses
        required: true
        schema:
          $ref: '#/definitions/hakakses.RequestHakAkses'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Hak Akses
          schema:
            type: string
      summary: Create Hak Akses
      tags:
      - Hak Akses
  /1.0/hak-akses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Hak Akses
      parameters:
      - description: Hak Akses ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Hak Akses
          schema:
            type: string
      summary: Delete Hak Akses
      tags:
      - Hak Akses
    get:
      consumes:
      - application/json
      description: Get Hak Akses By Id
      parameters:
      - description: Hak Akses ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hakakses.HakAkses'
      summary: Get Hak Akses By Id
      tags:
      - Hak Akses
    put:
      consumes:
      - application/json
      description: Update Hak Akses
      parameters:
      - description: Hak Akses ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Hak Akses
        in: body
        name: UpdateHakAkses
        required: true
        schema:
          $ref: '#/definitions/hakakses.RequestHakAkses'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Hak Akses
          schema:
            type: string
      summary: Update Hak Akses
      tags:
      - Hak Akses
  /1.0/hotel:
    get:
      consumes:
      - application/json
      description: Get All Hotel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hotel.Hotel'
      summary: Get All Hotel
      tags:
      - Hotel
    post:
      consumes:
      - application/json
      description: Create Hotel
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Hotel
        in: body
        name: CreateHotel
        required: true
        schema:
          $ref: '#/definitions/hotel.RequestHotel'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Hotel
          schema:
            type: string
      summary: Create Hotel
      tags:
      - Hotel
  /1.0/hotel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Hotel
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Hotel
          schema:
            type: string
      summary: Delete Hotel
      tags:
      - Hotel
    get:
      consumes:
      - application/json
      description: Get Hotel By ID
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hotel.Hotel'
      summary: Get Hotel By ID
      tags:
      - Hotel
    put:
      consumes:
      - application/json
      description: Update Hotel
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Hotel
        in: body
        name: UpdateHotel
        required: true
        schema:
          $ref: '#/definitions/hotel.RequestHotel'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Hotel
          schema:
            type: string
      summary: Update Hotel
      tags:
      - Hotel
  /1.0/kamar:
    get:
      consumes:
      - application/json
      description: Get All Kamar
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/kamar.Kamar'
      summary: Get All Kamar
      tags:
      - Kamar
    post:
      consumes:
      - application/json
      description: Create Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Kamar
        in: body
        name: CreateKamar
        required: true
        schema:
          $ref: '#/definitions/kamar.RequestKamar'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Kamar
          schema:
            type: string
      summary: Create Kamar
      tags:
      - Kamar
  /1.0/kamar/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Kamar
      parameters:
      - description: Kamar ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Kamar
          schema:
            type: string
      summary: Delete Kamar
      tags:
      - Kamar
    get:
      consumes:
      - application/json
      description: Get Kamar By ID
      parameters:
      - description: Kamar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/kamar.Kamar'
      summary: Get Kamar By ID
      tags:
      - Kamar
    put:
      consumes:
      - application/json
      description: Update Kamar
      parameters:
      - description: Kamar ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Kamar
        in: body
        name: UpdateKamar
        required: true
        schema:
          $ref: '#/definitions/kamar.RequestKamar'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Kamar
          schema:
            type: string
      summary: Update Kamar
      tags:
      - Kamar
  /1.0/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: Login
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/user.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Success Login
          schema:
            type: string
      summary: Login User
      tags:
      - User
  /1.0/logout:
    post:
      description: Logout User
      produces:
      - application/json
      responses:
        "200":
          description: Success Logout
          schema:
            type: string
      security:
      - Bearer: []
      summary: Logout User
      tags:
      - User
  /1.0/pembayaran:
    get:
      consumes:
      - application/json
      description: Get All Pembayaran
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pembayaran.ResponsePembayaran'
      summary: Get All Pembayaran
      tags:
      - Pembayaran
    post:
      consumes:
      - application/json
      description: Create Pembayaran
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Pembayaran
        in: body
        name: CreatePembayaran
        required: true
        schema:
          $ref: '#/definitions/pembayaran.RequestPembayaran'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Pembayaran
          schema:
            type: string
      summary: Create Pembayaran
      tags:
      - Pembayaran
  /1.0/pembayaran/{id}:
    get:
      consumes:
      - application/json
      description: Get Pembayaran By ID
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID Pembayaran
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pembayaran.ResponsePembayaran'
      summary: Get Pembayaran By ID
      tags:
      - Pembayaran
  /1.0/register:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Register
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/user.RequestCreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create User
          schema:
            type: string
      summary: Create User
      tags:
      - User
  /1.0/register-admin-hotel:
    post:
      consumes:
      - application/json
      description: Create Admin Hotel
      parameters:
      - description: Register
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/user.RequestCreateAdminHotel'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create User
          schema:
            type: string
      summary: Create Admin Hotel
      tags:
      - User
  /1.0/status-booking:
    get:
      consumes:
      - application/json
      description: Get All Status Booking
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statusbooking.StatusBooking'
      summary: Get All Status Booking
      tags:
      - Status Booking
    post:
      consumes:
      - application/json
      description: Create Status Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Status Booking
        in: body
        name: CreateStatusBooking
        required: true
        schema:
          $ref: '#/definitions/statusbooking.RequestStatusBooking'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Status Booking
          schema:
            type: string
      summary: Create Status Booking
      tags:
      - Status Booking
  /1.0/status-booking/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Status Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID Status Booking
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Status Booking
          schema:
            type: string
      summary: Delete Status Booking
      tags:
      - Status Booking
    get:
      consumes:
      - application/json
      description: Get Status Booking By ID
      parameters:
      - description: ID Status Booking
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statusbooking.StatusBooking'
      summary: Get Status Booking By ID
      tags:
      - Status Booking
    put:
      consumes:
      - application/json
      description: Update Status Booking
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID Status Booking
        in: path
        name: id
        required: true
        type: integer
      - description: Update Status Booking
        in: body
        name: UpdateStatusBooking
        required: true
        schema:
          $ref: '#/definitions/statusbooking.RequestStatusBooking'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Status Booking
          schema:
            type: string
      summary: Update Status Booking
      tags:
      - Status Booking
  /1.0/status-kamar:
    get:
      consumes:
      - application/json
      description: Get All Status Kamar
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statuskamar.StatusKamar'
      summary: Get All Status Kamar
      tags:
      - Status Kamar
    post:
      consumes:
      - application/json
      description: Create Status Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Status Kamar
        in: body
        name: CreateStatusKamar
        required: true
        schema:
          $ref: '#/definitions/statuskamar.RequestStatusKamar'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Status Kamar
          schema:
            type: string
      summary: Create Status Kamar
      tags:
      - Status Kamar
  /1.0/status-kamar/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Status Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Status Kamar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Status Kamar
          schema:
            type: string
      summary: Delete Status Kamar
      tags:
      - Status Kamar
    get:
      consumes:
      - application/json
      description: Get Status Kamar By ID
      parameters:
      - description: Status Kamar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statuskamar.StatusKamar'
      summary: Get Status Kamar By ID
      tags:
      - Status Kamar
    put:
      consumes:
      - application/json
      description: Update Status Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Status Kamar ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Status Kamar
        in: body
        name: UpdateStatusKamar
        required: true
        schema:
          $ref: '#/definitions/statuskamar.RequestStatusKamar'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Status Kamar
          schema:
            type: string
      summary: Update Status Kamar
      tags:
      - Status Kamar
  /1.0/tipe-kamar:
    get:
      consumes:
      - application/json
      description: Get All Tipe Kamar
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tipekamar.TipeKamar'
      summary: Get All Tipe Kamar
      tags:
      - Tipe Kamar
    post:
      consumes:
      - application/json
      description: Create Tipe Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Tipe Kamar
        in: body
        name: CreateTipeKamar
        required: true
        schema:
          $ref: '#/definitions/tipekamar.RequestTipeKamar'
      produces:
      - application/json
      responses:
        "201":
          description: Success Create Tipe Kamar
          schema:
            type: string
      summary: Create Tipe Kamar
      tags:
      - Tipe Kamar
  /1.0/tipe-kamar/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Tipe Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID Tipe Kamar
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success Delete Tipe Kamar
          schema:
            type: string
      summary: Delete Tipe Kamar
      tags:
      - Tipe Kamar
    get:
      consumes:
      - application/json
      description: Get Tipe Kamar By ID
      parameters:
      - description: ID Tipe Kamar
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tipekamar.TipeKamar'
      summary: Get Tipe Kamar By ID
      tags:
      - Tipe Kamar
    put:
      consumes:
      - application/json
      description: Update Tipe Kamar
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID Tipe Kamar
        in: path
        name: id
        required: true
        type: integer
      - description: Update Tipe Kamar
        in: body
        name: UpdateTipeKamar
        required: true
        schema:
          $ref: '#/definitions/tipekamar.RequestTipeKamar'
      produces:
      - application/json
      responses:
        "200":
          description: Success Update Tipe Kamar
          schema:
            type: string
      summary: Update Tipe Kamar
      tags:
      - Tipe Kamar
swagger: "2.0"
